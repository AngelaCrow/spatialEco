% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial.select.R
\name{spatial.select}
\alias{spatial.select}
\title{Spatial Select}
\usage{
spatial.select(x, y, distance = NULL, within = FALSE)
}
\arguments{
\item{x}{A SpatialPolygonsDataFrame object that defines the spatial query}

\item{y}{A sp feature class that will be subset by the query of x}

\item{distance}{A proximity distance of features to select (within distance)}

\item{within}{Select polygons completely within (TRUE) or partial within (FALSE)}
}
\value{
An sp object representing a subset of y based on the spatial query of x
}
\description{
Performs a spatial select (feature subset) between two feature classes
}
\note{
Performs a spatial select of features based on an overlay of a polygon (x),   
      which can represent multiple features, and a polygon, point or line feature 
      classes (y). User can specify a partial or complete intersection, using within 
      argument, or within a distance, using distance argument, in relation to the  
      query polygon. This function is similar to ArcGIS spatial select. Please note
      that for point to point neighbor selections use the knn function.
}
\examples{
library(raster)
library(sp)   

data(meuse)
  coordinates(meuse) <- ~x+y

spolys <- hexagons(meuse, res=100)
p <- raster(extent(spolys), res=800)
  p[] <- runif(ncell(p)) * 10
    p <- rasterToPolygons(p, fun=function(x){x > 6})
	
#### On polygons	
# Intersecting but not contained within
sub.int <- spatial.select(p, spolys, within = FALSE)

# Contained within
sub.contained <- spatial.select(p, spolys, within = TRUE)

# Within 100m distance
sub.dist <- spatial.select(p, spolys, distance=100)

par(mfrow=c(2,2))
  plot(spolys, main="all data")
    plot(p, add=TRUE) 
  plot(sub.int, main="Intersecting but not contained within")
    plot(p, add=TRUE) 
  plot(sub.contained, main="Contained within")
    plot(p, add=TRUE) 	
  plot(sub.dist, main="Within 100m distance")
    plot(p, add=TRUE) 

#### On points
# Intersecting but not contained within
sub.int <- spatial.select(p, meuse, within = FALSE)

# Contained within (with points, same as within = FALSE)
sub.contained <- spatial.select(p, meuse, within = TRUE)

# Within 100m distance
sub.dist <- spatial.select(p, meuse, distance=300)

par(mfrow=c(2,2))
  plot(meuse, main="all data", pch=20)
    plot(p, add=TRUE) 
  plot(sub.int, main="Intersecting but not contained within", pch=20)
    plot(p, add=TRUE) 
  plot(sub.contained, main="Contained within", pch=20)
    plot(p, add=TRUE) 	
  plot(sub.dist, main="Within 300m distance", pch=20)
    plot(p, add=TRUE) 

}
\seealso{
\code{\link[rgeos]{gIntersects}} for details on behavior of within = FALSE

\code{\link[rgeos]{gContains}} for details on behavior of within = TRUE

\code{\link[rgeos]{gWithinDistance}} for details on distance intersection
}
\author{
Jeffrey S. Evans  <jeffrey_evans@tnc.org>
}
